$(document).ready(function() {

  var EARTHQUAKES = [];
  var ERUPTIONS = [];
  var SHOW_EQ_MARKERS = false;
  var SHOW_ER_MARKERS = false;
  var SHOW_EQ_HEATMAP = true;
  var SHOW_ER_HEATMAP = true;
  var DATE_HI = new Date();
  var DATE_LO = new Date(-4500,0,1);
  var TIMEOUT;


  // variables for determing eruption radius //////////////////////////////////////////////////// 
  // position will be between 0 and 100
  var er_minp = 0;
  var er_maxp = 8;

  // The result should be between 100 an 10000000
  var er_minv = Math.log(25000);
  var er_maxv = Math.log(1500000);

  // calculate adjustment factor
  var er_scale = (er_maxv-er_minv) / (er_maxp-er_minp);

  // variables for determing earthquake radius //////////////////////////////////////////////////// 
  // position will be between 0 and 100
  var eq_minp = 0;
  var eq_maxp = 10;

  // The result should be between 100 an 10000000
  var eq_minv = Math.log(14000);
  var eq_maxv = Math.log(200000);

  // calculate adjustment factor
  var eq_scale = (eq_maxv-eq_minv) / (eq_maxp-eq_minp);


///////////////////////////////////////////////////////////////////////////////////////////////////
// Initialize map
///////////////////////////////////////////////////////////////////////////////////////////////////

  var mapDiv = document.getElementById('map');
  var map = new google.maps.Map(mapDiv, {
    center: {lat: 37.540, lng: -100.546},
    mapTypeId: google.maps.MapTypeId.HYBRID,
    disableDefaultUI: true,  // dont display the google map ui things, they just get in the way
    zoom: 4,
    minZoom: 2,
  });

  var infowindow = new google.maps.InfoWindow({});

  var heatmap = new google.maps.visualization.HeatmapLayer({
    map: map,
    dissipating: false,
    radius: 3,
    opacity: 0.7,
    gradient: [
      'rgba(193, 249, 101, 0)',
      'rgba(201, 235, 88, 1)',
      'rgba(208, 222, 76, 1)',
      'rgba(209, 203, 64, 1)',
      'rgba(196, 170, 54, 1)',
      'rgba(182, 138, 44, 1)',
      'rgba(169, 108, 35, 1)',
      'rgba(156, 79, 27, 1)',
      'rgba(143, 52, 20, 1)',
      'rgba(129, 28, 14, 1)',
      'rgba(116, 9, 10, 1)'
    ]
  });
  
  draw_earthquakes(gon.earthquakes);
  draw_eruptions(gon.eruptions);
  draw_heatmap(gon.earthquakes,gon.eruptions);

///////////////////////////////////////////////////////////////////////////////////////////////////
// Initialize Heatmap
///////////////////////////////////////////////////////////////////////////////////////////////////

  function draw_heatmap(earthquakes,eruptions){
    heatmap.setData(getPoints(earthquakes,eruptions));
  }
  function getPoints(earthquakes,eruptions) {
    var arr = []
    if(SHOW_EQ_HEATMAP){
      for(i in earthquakes){
        arr.push(new google.maps.LatLng(gon.earthquakes[i].latitude, gon.earthquakes[i].longitude))
      }
    }
    if(SHOW_ER_HEATMAP){
      for(i in eruptions){
        arr.push(new google.maps.LatLng(gon.eruptions[i].latitude, gon.eruptions[i].longitude))
      }
    }
    return arr
  }  

///////////////////////////////////////////////////////////////////////////////////////////////////
// Draw data points on to map
///////////////////////////////////////////////////////////////////////////////////////////////////

  function draw_eruptions(eruptions) {
    for(i in eruptions){
      addEruption(eruptions[i])
    }
  }
  // Adds a circle marker to the google map with attributes based on its data
  function addEarthquake(earthquake) {
    var earthquakeCircle = new google.maps.Circle({
      class: 'marker earthquake',
      strokeColor: '#222222',
      zIndex: 15-earthquake.eq_primary,
      strokeOpacity: 0.7,
      strokeWeight: 0.4,
      fillColor: '#ff0000',
      fillOpacity: 0.4,
      visible: SHOW_EQ_MARKERS,
      map: map,
      center: new google.maps.LatLng(earthquake.latitude, earthquake.longitude),
      radius: EarthquakeLogSlider(earthquake.eq_primary),
      data: {id:earthquake.id,year:earthquake.year,magnitude:earthquake.eq_primary}
    });
    // Adds a listener that will show an info window for the marker when clicked
    earthquakeCircle.addListener('click', function(event) {
      $.ajax({
        type: 'GET',
        url: '/home/earthquake_data',
        data: {id: earthquake.id},
        success: (function(data) {
          infowindow.setContent(data);
          infowindow.setPosition(event.latLng);
          infowindow.open(map, earthquakeCircle);
        }) // TODO failure
      });
    });
    // When we hover over a marker, lets make it more opaque
    earthquakeCircle.addListener('mouseover', function(event) {
      this.setOptions({fillOpacity: 0.9});
    });
    // return the marker to normal opacity when we are no longer hovering over it
    earthquakeCircle.addListener('mouseout', function(event) {
      this.setOptions({fillOpacity: 0.7});
    });
    EARTHQUAKES.push(earthquakeCircle);
  }

  function draw_earthquakes(earthquakes) {
    for(i in earthquakes){
      addEarthquake(earthquakes[i])
    }
  }
  // Adds a circle marker to the google map with attributes based on its data
  function addEruption(eruption) {
    var eruptionCircle = new google.maps.Circle({
      class: 'marker eruption',
      zIndex: 11-eruption.vei,
      strokeColor: '#222222',
      strokeOpacity: 0.7,
      strokeWeight: 0.5,
      fillColor: '#fdff14',
      fillOpacity: 0.4,
      visible: SHOW_ER_MARKERS,
      map: map,
      center: new google.maps.LatLng(eruption.latitude, eruption.longitude),
      radius: EruptionLogSlider(eruption.vei),
      data: {id:eruption.id,year:eruption.year,vei:eruption.vei}
    });
    // Adds a listener that will show an info window for the marker when clicked
    eruptionCircle.addListener('click', function(event) {
      $.ajax({
        type: 'GET',
        url: '/home/eruption_data',
        data: {id: eruption.id},
        success: (function(data) {
          infowindow.setContent(data);
          infowindow.setPosition(event.latLng);
          infowindow.open(map, eruptionCircle);
        }) // TODO add failure
      });

    });
    // When we hover over a marker, lets make it more opaque
    eruptionCircle.addListener('mouseover', function(event) {
      this.setOptions({fillOpacity: 0.9});
    });
    // return the marker to normal opacity when we are no longer hovering over it
    eruptionCircle.addListener('mouseout', function(event) {
      this.setOptions({fillOpacity: 0.7});
    });
    ERUPTIONS.push(eruptionCircle);
  }

  // Add our KML boundaries
  var kmzLayer = new google.maps.KmlLayer({
    // this layer is probably meant for google earth and displays wierd horizontal bars, TODO - fix or find better layer
    url: 'http://henrydchipman.com/plates.kmz',
    map: map,
    preserveViewport: true,
    suppressInfoWindows: false,
    screenOverlays: true,
    zIndex: -999
  });


///////////////////////////////////////////////////////////////////////////////////////////////////
// Date Slider
///////////////////////////////////////////////////////////////////////////////////////////////////

var slider = $("#slider").ionRangeSlider({
    type: "double",
    min: -5000,
    max: 2500,
    from_min: DATE_LO.getFullYear(),
    from_max: DATE_HI.getFullYear(),
    to_min: DATE_LO.getFullYear(),
    to_max: DATE_HI.getFullYear(),
    grid: true,
    force_edges: true,
    grid_num: 30,
    keyboard: true,
    keyboard_step: 0.013333,
    prettify_separator: '',
    values_separator: ' to ',
    onChange: slide
});

function slide() {
    clearTimeout(TIMEOUT);
    TIMEOUT = setTimeout(function(){adjustVisuals()}, 1500);
}

function adjustVisuals(){
  adjustMarkers();
  adjustHeatmap();
}

function adjustMarkers(){
  showLoadingIcon();
  var year_lo = parseInt($(".irs-from").html());
  var year_hi = parseInt($(".irs-to").html());
  adjustEruptions(year_lo,year_hi);
  adjustEarthquakes(year_lo,year_hi);
}

function adjustHeatmap(){
  var year_lo = parseInt($(".irs-from").html());
  var year_hi = parseInt($(".irs-to").html());
  adjustHeatmapData(year_lo,year_hi);
}

function adjustEruptions(year_lo,year_hi){
  var vei_lo = parseInt($("#vei_lo").val());
  var vei_hi = parseInt($("#vei_hi").val());
  for(i in ERUPTIONS){
    eruption = ERUPTIONS[i];
    if(!(SHOW_ER_MARKERS) || year_lo > eruption.data.year || eruption.data.year > year_hi || vei_lo > eruption.data.vei || vei_hi < eruption.data.vei){
      eruption.setVisible(false);
    }else{
      eruption.setVisible(true);
    }
  }
}

function adjustEarthquakes(year_lo,year_hi){
  var mag_lo = parseInt($("#mag_lo").val());
  var mag_hi = parseInt($("#mag_hi").val());
  for(i in EARTHQUAKES){
    earthquake = EARTHQUAKES[i];
    if( !(SHOW_EQ_MARKERS) || year_lo > earthquake.data.year || earthquake.data.year > year_hi || mag_lo > earthquake.data.magnitude || mag_hi < earthquake.data.magnitude){
      earthquake.setVisible(false);
    }else{
      earthquake.setVisible(true);
    }
  }
}

// include mag/vei filtering
function adjustHeatmapData(year_lo,year_hi){
  var mag_lo = parseInt($("#mag_lo").val());
  var mag_hi = parseInt($("#mag_hi").val());
  var vei_lo = parseInt($("#vei_lo").val());
  var vei_hi = parseInt($("#vei_hi").val());
  var arr = [];
  if(SHOW_EQ_HEATMAP){
    for(i in gon.earthquakes){
      if(!(year_lo > gon.earthquakes[i].year || gon.earthquakes[i].year > year_hi || gon.earthquakes[i].eq_primary > mag_hi || gon.earthquakes[i].eq_primary < mag_lo )){
        arr.push(new google.maps.LatLng(gon.earthquakes[i].latitude, gon.earthquakes[i].longitude))
      }
    }
  }
  if(SHOW_ER_HEATMAP){
    for(i in gon.eruptions){
      if(!(year_lo > gon.eruptions[i].year || gon.eruptions[i].year > year_hi || gon.eruptions[i].vei > vei_hi || gon.eruptions[i].vei < vei_lo )){
        arr.push(new google.maps.LatLng(gon.eruptions[i].latitude, gon.eruptions[i].longitude))
      }
    }    
  }
  heatmap.setData(arr);
}

///////////////////////////////////////////////////////////////////////////////////////////////////
// Helper functions
///////////////////////////////////////////////////////////////////////////////////////////////////


  function EruptionLogSlider(position) {
    if(position == null){
      position = 0;
    }
    return Math.exp(er_minv + er_scale*(position-er_minp));
  }

  function EarthquakeLogSlider(position) {
    if(position == null){
      position = 0;
    }
    return Math.exp(eq_minv + eq_scale*(position-eq_minp));
  }

///////////////////////////////////////////////////////////////////////////////////////////////////
// Button / input click functions
///////////////////////////////////////////////////////////////////////////////////////////////////


$('.heatmap-button').click(function(){
    SHOW_ER_HEATMAP = $('#eruption-heatmap-button').is(':checked');
    SHOW_EQ_HEATMAP = $('#earthquake-heatmap-button').is(':checked');
    adjustHeatmap();
});

$('.marker-button').click(function(){
    SHOW_ER_MARKERS = $('#eruption-marker-button').is(':checked');
    SHOW_EQ_MARKERS = $('#earthquake-marker-button').is(':checked');
    adjustMarkers();
});

$("#mag_lo, #mag_hi, #vei_hi, #vei_lo").change(function(){
    clearTimeout(TIMEOUT);
    TIMEOUT = setTimeout(function(){adjustVisuals()}, 1500);
})


$(".about-toggle").click(function(){
  $('#info_window').toggle();
})

///////////////////////////////////////////////////////////////////////////////////////////////////
// 
///////////////////////////////////////////////////////////////////////////////////////////////////

function showLoadingIcon(){
  if((SHOW_EQ_MARKERS && SHOW_ER_MARKERS) || (!SHOW_ER_MARKERS && SHOW_EQ_MARKERS)){
    $('.loading').show();
    setTimeout(function(){$('.loading').hide();},3000);
  }else if(SHOW_ER_MARKERS && !SHOW_EQ_MARKERS){
    $('.loading').show();
    setTimeout(function(){$('.loading').hide();},1000);
  }else{
  }
}

///////////////////////////////////////////////////////////////////////////////////////////////////
// Depricated for now
///////////////////////////////////////////////////////////////////////////////////////////////////

    // var markers = [];
    // google.maps.event.addListener(map, 'idle', showMarkers);
    //
    // function showMarkers() {
    //   var bounds = map.getBounds();
    //   var ne = bounds.getNorthEast(); // LatLng of the north-east corner
    //   var sw = bounds.getSouthWest(); // LatLng of the south-west corder
    //   lat_hi = ne.lat();
    //   lat_lo = sw.lat();
    //   long_hi = ne.lng();
    //   long_lo = sw.lng();
    //
    //   $.ajax({
    //     type: 'POST',
    //     url: '/home/set_markers',
    //     data: {lat_hi: lat_hi, lat_lo: lat_lo, long_lo: long_lo, long_hi: long_hi}
    //   });
    //
    //   console.log(markers.length);
    //
    //   for (var i = 0; i < markers.length; i++) {
    //
    //       markers[i].setMap(null);
    //   }
    //
    //   // var eruptions = gon.eruptions;
    //   // var earthquakes = gon.earthquakes;
    //   draw_eruptions(gon.eruptions);
    //   draw_earthquakes(gon.earthquakes);
    // }

});
